@include describe("Lists ~ Replace-Nth") {
  @include it("should replace nth in a list") {
    $list-1: 1, 2, 3, 4;
    $list-2: true, false, false, true;
    $list-3: "bar", "foo", "bar", "baz";

    @include should(expect( ballistic-replace-nth($list-1, 2, 1)     ), to(equal( (1, 1, 3, 4)                 )));
    @include should(expect( ballistic-replace-nth($list-2, 2, true)  ), to(equal( (true, true, false, true)    )));
    @include should(expect( ballistic-replace-nth($list-3, 2, "tah") ), to(equal( ("bar", "tah", "bar", "baz") )));
  }

  @include it("should remove nth from a list if no value is provided") {
    $list-1: 1, 2, 3, 4;
    $list-2: true, false, false, true;
    $list-3: "bar", "foo", "bar", "baz";

    @include should(expect( ballistic-replace-nth($list-1, 2) ), to(equal( (1, 3, 4)             )));
    @include should(expect( ballistic-replace-nth($list-2, 2) ), to(equal( (true, false, true)   )));
    @include should(expect( ballistic-replace-nth($list-3, 2) ), to(equal( ("bar", "bar", "baz") )));
  }

  @include it("should replace negative nth in a list") {
    $list-1: 1, 2, 3, 4;
    $list-2: true, false, false, true;
    $list-3: "bar", "foo", "bar", "baz";

    @include should(expect( ballistic-replace-nth($list-1, -2, 1)     ), to(equal( (1, 2, 1, 4)                 )));
    @include should(expect( ballistic-replace-nth($list-2, -2, true)  ), to(equal( (true, false, true, true)    )));
    @include should(expect( ballistic-replace-nth($list-3, -2, "tah") ), to(equal( ("bar", "foo", "tah", "baz") )));
  }

  @include it("should remove negative nth from a list if no value is provided") {
    $list-1: 1, 2, 3, 4;
    $list-2: true, false, false, true;
    $list-3: "bar", "foo", "bar", "baz";

    @include should(expect( ballistic-replace-nth($list-1, -2) ), to(equal( (1, 2, 4)             )));
    @include should(expect( ballistic-replace-nth($list-2, -2) ), to(equal( (true, false, true)   )));
    @include should(expect( ballistic-replace-nth($list-3, -2) ), to(equal( ("bar", "foo", "baz") )));
  }

  @include it("should return null for invalid indexes") {
    $list: 1, 2, 3, 4;

    @include should(expect( ballistic-replace-nth($list,     0) ), to( be-null()));
    @include should(expect( ballistic-replace-nth($list,     5) ), to( be-null()));
    @include should(expect( ballistic-replace-nth($list,    -5) ), to( be-null()));
    @include should(expect( ballistic-replace-nth($list, "foo") ), to( be-null()));
  }
}
