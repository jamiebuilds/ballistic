@include describe("Lists ~ Last") {
  @include it("should return the last item in an array") {
    $numbers:  1, 2, 3;
    $strings:  "foo", "bar", "baz";
    $booleans: true, false, false;

    @include should(expect( ballistic-last($numbers ) ), to( be( (3) )));
    @include should(expect( ballistic-last($strings ) ), to( be( ("baz") )));
    @include should(expect( ballistic-last($booleans) ), to( be( (false) )));
  }

  @include it("should return the last nth items in an array") {
    $numbers:  1, 2, 3;
    $strings:  "foo", "bar", "baz";
    $booleans: true, false, false;

    @include should(expect( ballistic-last($numbers , 1) ), to( be( 3 )));
    @include should(expect( ballistic-last($strings , 1) ), to( be( "baz" )));
    @include should(expect( ballistic-last($booleans, 1) ), to( be( false )));
  }

  @include it("should return self when the length of list is not enough") {
    $numbers:  1, 2, 3;
    $strings:  "foo", "bar", "baz";
    $booleans: true, false, false;

    @include should(expect( ballistic-last($numbers , 4) ), to( be( $numbers )));
    @include should(expect( ballistic-last($strings , 4) ), to( be( $strings )));
    @include should(expect( ballistic-last($booleans, 4) ), to( be( $booleans )));
  }

  @include it("should return the only item in an single item array") {
    $number: 1;
    $string: "foo";
    $boolean: true;

    @include should(expect( ballistic-last($number ) ), to( be( 1 )));
    @include should(expect( ballistic-last($string ) ), to( be( "foo" )));
    @include should(expect( ballistic-last($boolean) ), to( be( true )));
  }

  @include it("should return null when a list is empty") {
    $empty: ();

    @include should(expect( ballistic-last($empty) ), to( be-null() ));
  }
}
